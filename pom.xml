<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2016 Rocana.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.osso-project</groupId>
  <artifactId>osso</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <properties>
    <!-- Project core properties. -->
    <java.target-version>1.7</java.target-version>
    <java.source-version>1.7</java.source-version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Plugin versions -->
    <version.apache-rat-plugin>0.11</version.apache-rat-plugin>
    <version.maven-compiler-plugin>3.1</version.maven-compiler-plugin>
    <version.maven-gpg-plugin>1.6</version.maven-gpg-plugin>
    <version.maven-javadoc-plugin>2.9.1</version.maven-javadoc-plugin>
    <version.maven-release-plugin>2.3.2</version.maven-release-plugin>
    <version.maven-resources-plugin>2.6</version.maven-resources-plugin>

    <!-- Dependency versions -->
    <version.avro>1.7.6</version.avro>
    <version.junit>4.12</version.junit>
  </properties>

  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <url>http://www.osso-project.org</url>

  <scm>
    <url>https://github.com/osso-project/osso</url>
    <connection>scm:git:git@github.com:osso-project/osso.git</connection>
    <developerConnection>scm:git:git@github.com:osso-project/osso.git</developerConnection>
    <tag>master</tag>
  </scm>

  <contributors>
    <contributor>
      <organization>Rocana</organization>
      <organizationUrl>http://www.rocana.com/</organizationUrl>
    </contributor>
  </contributors>

  <distributionManagement>
    <snapshotRepository>
      <id>osso-snapshots</id>
      <url>http://repository.rocana.com/content/repositories/osso-snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>osso-releases</id>
      <url>http://repository.rocana.com/content/repositories/osso/</url>
    </repository>
  </distributionManagement>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${version.maven-gpg-plugin}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <keyname>releases@rocana.com</keyname>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${version.maven-compiler-plugin}</version>
        <configuration>
          <source>${java.source-version}</source>
          <target>${java.target-version}</target>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${version.maven-javadoc-plugin}</version>
        <configuration>
          <failOnError>true</failOnError>
          <author>false</author>
        </configuration>
        <executions>
          <execution>
            <id>javadoc</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${version.maven-resources-plugin}</version>
        <executions>
          <!--
            Copy the Avro schemas into the jar so they're available as classpath
            resources without needing to reference the generated code.
            -->
          <execution>
            <id>copy-avro-source</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/avro</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <version>${version.avro}</version>
        <configuration>
          <stringType>String</stringType>
          <imports>
            <import>${basedir}/src/main/avro/org/osso/event/Event.avsc</import>
          </imports>
        </configuration>
        <executions>
          <execution>
            <id>avro-compile</id>
            <goals>
              <goal>schema</goal>
            </goals>
            <phase>generate-sources</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>${version.apache-rat-plugin}</version>
        <configuration>
          <excludes>
            <exclude>.git/**</exclude>
            <!-- Maven repo on jenkins -->
            <exclude>.repository/**</exclude>
            <!-- Rat can't detect the license info in the readme. -->
            <exclude>README.md</exclude>
            <!-- Avro schemas are JSON and don't allow comments for license headers. -->
            <exclude>src/main/avro/**</exclude>
            <!-- Exclude gradle wrapper generated files. -->
            <exclude>**/gradlew*</exclude>
            <exclude>gradle/**</exclude>
            <exclude>buildSrc/gradle/**</exclude>
            <!-- Exclude gradle build and temp files. -->
            <exclude>**/build/**</exclude>
            <exclude>**/.gradle/**</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${version.maven-release-plugin}</version>
        <configuration>
          <releaseProfiles>release</releaseProfiles>
        </configuration>
      </plugin>

    </plugins>

  </build>

  <dependencies>

    <!--
      Please keep all dependencies ordered by groupId and artifactId, in each
      group. Extract all versions into properties above.
    -->

    <!-- Project compile dependencies. -->

    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${version.avro}</version>
    </dependency>

    <!-- Project test dependencies. -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${version.junit}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
